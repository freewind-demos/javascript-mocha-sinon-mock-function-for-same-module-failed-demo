import {expect} from 'chai'
import sinon from 'sinon'
import * as hello from '../hello'
import * as core from '../core'

describe('sinon', function () {
    let sandbox
    beforeEach(() => sandbox = sinon.sandbox.create())
    afterEach(() => sandbox.restore())

    it('should replace an indirect used function by a stub', function () {
        sandbox.stub(core, 'core').callsFake(function (name) {
            console.log('---------- mock function: core ------------')
            return `[[${name}]]`
        })
        const value = hello.words('sinon')
        console.log(value)
        expect(value).eq('Hello, [[sinon]]!')
    })

    it('but cannot replace a more indirect function :(', function () {
        // not working
        sandbox.stub(core, 'x').callsFake(function (name) {
            console.log('---------- mock function: x ------------')
            return `*** ${name} ***`
        })
        const value = hello.words('sinon')
        console.log(value)
        // `<<xxx sinon xxx>>` is generated by the real function
        expect(value).eq('Hello, <<xxx sinon xxx>>!')
    })
    
})